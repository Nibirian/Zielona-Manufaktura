"use strict";var DOMReady=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:function(){},n=1<arguments.length&&void 0!==arguments[1]?arguments[1]:document,t=2<arguments.length&&void 0!==arguments[2]?arguments[2]:"addEventListener";return n[t]?n[t]("DOMContentLoaded",e):window.attachEvent("onload",e)},ProjectAPI=function(){var t=function(e,n){if(null!==e)return e.classList?e.classList.contains(n):!!e.className.match(new RegExp("(\\s|^)"+n+"(\\s|$)"))};return{hasClass:t,addClass:function(e,n){null!==e&&(e.classList?e.classList.add(n):t(e,n)||(e.className+=" "+n))},removeClass:function(e,n){null!==e&&(e.classList?e.classList.remove(n):t(e,n)&&(n=new RegExp("(\\s|^)"+n+"(\\s|$)"),e.className=e.className.replace(n," ")))}}}(),readyFunction=function(){var e="js-scrolling",n=e+"--active",t=e+"--inactive",s=!1,a=1,o=document.querySelectorAll("."+e+"__page").length,c=function(){var e=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:a;return document.querySelector(".js-scrolling__page-"+e)};s=!0,ProjectAPI.removeClass(e(),t),ProjectAPI.addClass(e(),n),ProjectAPI.addClass(e(a-1),t),ProjectAPI.removeClass(e(a+1),n),setTimeout(function(){return s=!1},1e3)},l=function(){1!==a&&(a--,c())},i=function(){a!==o&&(a++,c())},e=function(e){s||(0<e.wheelDelta||e.detail<0?l():(e.wheelDelta<0||0<e.detail)&&i())},r=function(e){s||(38===(e=e.keyCode||e.which)?l():40===e&&i())};document.addEventListener("mousewheel",e,!1),document.addEventListener("DOMMouseScroll",e,!1),document.addEventListener("keydown",r,!1)};DOMReady(readyFunction);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
