"use strict";var navMobile=document.querySelector(".nav-mobile"),navBtn=document.querySelector(".hamburger"),allNavItems=document.querySelectorAll(".nav-link"),cookieBox=document.querySelector(".cookie-box"),cookieBtn=document.querySelector(".cookie-btn"),showCookie=function(){localStorage.getItem("cookie")&&cookieBox.classList.add("hide")},handleCookieBox=function(){localStorage.setItem("cookie","true"),cookieBox.classList.add("hide")},handleNav=(cookieBtn.addEventListener("click",handleCookieBox),showCookie(),function(){navMobile.classList.toggle("nav-mobile--active"),navBtn.classList.toggle("is-active"),allNavItems.forEach(function(e){e.addEventListener("click",function(){navBtn.classList.remove("is-active")})}),allNavItems.forEach(function(e){e.addEventListener("click",function(){navMobile.classList.remove("nav-mobile--active")})})}),DOMReady=(navBtn.addEventListener("click",handleNav),function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:function(){},t=1<arguments.length&&void 0!==arguments[1]?arguments[1]:document,n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:"addEventListener";return t[n]?t[n]("DOMContentLoaded",e):window.attachEvent("onload",e)}),ProjectAPI=function(){var n=function(e,t){if(null!==e)return e.classList?e.classList.contains(t):!!e.className.match(new RegExp("(\\s|^)"+t+"(\\s|$)"))};return{hasClass:n,addClass:function(e,t){null!==e&&(e.classList?e.classList.add(t):n(e,t)||(e.className+=" "+t))},removeClass:function(e,t){null!==e&&(e.classList?e.classList.remove(t):n(e,t)&&(t=new RegExp("(\\s|^)"+t+"(\\s|$)"),e.className=e.className.replace(t," ")))}}}(),readyFunction=function(){var e="js-scrolling",t=e+"--active",n=e+"--inactive",o=!1,a=1,c=document.querySelectorAll("."+e+"__page").length,i=function(){var e=function(){var e=0<arguments.length&&void 0!==arguments[0]?arguments[0]:a;return document.querySelector(".js-scrolling__page-"+e)};o=!0,ProjectAPI.removeClass(e(),n),ProjectAPI.addClass(e(),t),ProjectAPI.addClass(e(a-1),n),ProjectAPI.removeClass(e(a+1),t),setTimeout(function(){return o=!1},1e3)},s=function(){1!==a&&(a--,i())},l=function(){a!==c&&(a++,i())},e=function(e){o||(0<e.wheelDelta||e.detail<0?s():(e.wheelDelta<0||0<e.detail)&&l())},r=function(e){o||(38===(e=e.keyCode||e.which)?s():40===e&&l())};document.addEventListener("mousewheel",e,!1),document.addEventListener("DOMMouseScroll",e,!1),document.addEventListener("keydown",r,!1)};DOMReady(readyFunction);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
